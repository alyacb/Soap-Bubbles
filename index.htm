<!DOCTYPE html>
<html>
 <head>
  <meta charset="UTF-8">
  <title> Mandelbrot </title>
  <style>
	body {
	 margin: 0;
	}

	#container {
	 position: relative;
	}

	#map {
	 position: absolute;
	 top: 0;
	 left: 0;
	}

	#load {
	 position: absolute;
	 background: #000000;
	 color:  #FFFFFF;
	 padding: 4px;
	 margin: 10px;
	 opacity: 0.7;
	}
  </style>
  <script src="fractals.js"></script>
 </head>
 <body onload="init()" onresize="init()">
  <div id="container">
   <div id="load">Loading...&nbsp;&nbsp;&nbsp;
    <input id="informer" value="draw" style="width: 0; visibility: hidden;">
   </div>
   <canvas id="map"></canvas>
  </div>
  <script>
   var map = document.getElementById("map");
   var loading = document.getElementById("load");  
  
   // This element exists purely to 'inform' on the fractal's state, so that loading can react appropriately, for e.g.
   var informer = document.getElementById("informer");
  
   map.addEventListener('dblclick', zoom_in);
   map.addEventListener("click", fractal_move);
   var timer = -1;
   var max_iter = 23;
   var width = window.innerWidth;
   var height = window.innerHeight;
   var zoom = 3;
   var xmin = -1;
   var xmax = 2.5;
   var ymin = -1;
   var ymax = 1;

   // shows the load signal
   function show_load(){
	load.style.opacity = 0.7;
   }

   // hides the load signal, and clears timers
   function hide_load(){
	if(informer.value == "hide"){ // it is time to hide
		load.style.opacity = 0;
		informer.value="done";
		clearInterval(timer);
		timer = -1;
	}
   }

   // initializes the width and height, triggered on loading and on resizing page
   function init() {
	width = window.innerWidth;
   	height = window.innerHeight;
   	map.width = width;
   	map.height = height;
	setInterval(hide_load, 100);
	fractal_draw();
   }

   // Redraws the fractal with the current parameters
   function fractal_draw() {
	show_load();	
	informer.value = "draw";

   	setTimeout(function(){
		clearInterval(timer);
		timer = -1;
		timer = graph(map, max_iter, zoom*xmin, zoom*xmax, zoom*ymin, zoom*ymax, informer);
	}, 1);
   }

   // Shifts the fractal so that the clicked point is at the center of the screen 
   function fractal_move(event) {
	var xrange = xmax - xmin;
	var yrange = ymax - ymin;
	var xf = (event.clientX-width/2)*xrange/width;
	var yf = (event.clientY-height/2)*yrange/height;
	xmin -= xf;
	xmax -= xf;
	ymin -= yf;
	ymax -= yf;
	fractal_draw();
   }

   // Zooms in on the fractal by a factor of 2/3 (redraws fractal when triggered)
   function zoom_in() {
	zoom*=2/3;
	fractal_draw();
   }

  </script>
 </body>
</html>
